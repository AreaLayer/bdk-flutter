// Mocks generated by Mockito 5.3.0 from annotations
// in bdk_flutter/test/bdk_flutter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:bdk_flutter/bdk_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponseWallet_0 extends _i1.SmartFake
    implements _i2.ResponseWallet {
  _FakeResponseWallet_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [BdkWallet].
///
/// See the documentation for Mockito's code generation for more information.
class MockBdkWallet extends _i1.Mock implements _i2.BdkWallet {
  MockBdkWallet() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.ResponseWallet> createWallet(
          {String? mnemonic,
          String? password,
          String? descriptor,
          String? changeDescriptor,
          _i2.Network? network,
          String? blockChainConfigUrl,
          String? socks5OrProxy,
          _i2.Blockchain? blockchain,
          String? retry,
          String? timeOut}) =>
      (super.noSuchMethod(
          Invocation.method(#createWallet, [], {
            #mnemonic: mnemonic,
            #password: password,
            #descriptor: descriptor,
            #changeDescriptor: changeDescriptor,
            #network: network,
            #blockChainConfigUrl: blockChainConfigUrl,
            #socks5OrProxy: socks5OrProxy,
            #blockchain: blockchain,
            #retry: retry,
            #timeOut: timeOut
          }),
          returnValue:
              _i3.Future<_i2.ResponseWallet>.value(_FakeResponseWallet_0(
                  this,
                  Invocation.method(#createWallet, [], {
                    #mnemonic: mnemonic,
                    #password: password,
                    #descriptor: descriptor,
                    #changeDescriptor: changeDescriptor,
                    #network: network,
                    #blockChainConfigUrl: blockChainConfigUrl,
                    #socks5OrProxy: socks5OrProxy,
                    #blockchain: blockchain,
                    #retry: retry,
                    #timeOut: timeOut
                  })))) as _i3.Future<_i2.ResponseWallet>);
  @override
  _i3.Future<_i2.ResponseWallet> getWallet() => (super.noSuchMethod(
          Invocation.method(#getWallet, []),
          returnValue: _i3.Future<_i2.ResponseWallet>.value(
              _FakeResponseWallet_0(this, Invocation.method(#getWallet, []))))
      as _i3.Future<_i2.ResponseWallet>);
  @override
  _i3.Future<String> getNewAddress() =>
      (super.noSuchMethod(Invocation.method(#getNewAddress, []),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> getBalance() =>
      (super.noSuchMethod(Invocation.method(#getBalance, []),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> getLastUnusedAddress() =>
      (super.noSuchMethod(Invocation.method(#getLastUnusedAddress, []),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<List<_i2.Transaction>> getTransactions() =>
      (super.noSuchMethod(Invocation.method(#getTransactions, []),
              returnValue:
                  _i3.Future<List<_i2.Transaction>>.value(<_i2.Transaction>[]))
          as _i3.Future<List<_i2.Transaction>>);
  @override
  _i3.Future<List<_i2.Transaction>> getPendingTransactions() =>
      (super.noSuchMethod(Invocation.method(#getPendingTransactions, []),
              returnValue:
                  _i3.Future<List<_i2.Transaction>>.value(<_i2.Transaction>[]))
          as _i3.Future<List<_i2.Transaction>>);
  @override
  _i3.Future<List<_i2.Transaction>> getConfirmedTransactions() =>
      (super.noSuchMethod(Invocation.method(#getConfirmedTransactions, []),
              returnValue:
                  _i3.Future<List<_i2.Transaction>>.value(<_i2.Transaction>[]))
          as _i3.Future<List<_i2.Transaction>>);
  @override
  _i3.Future<String> createTransaction(
          {String? recipient, int? amount, double? feeRate}) =>
      (super.noSuchMethod(
          Invocation.method(#createTransaction, [],
              {#recipient: recipient, #amount: amount, #feeRate: feeRate}),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<void> signTransaction({String? psbt}) => (super.noSuchMethod(
      Invocation.method(#signTransaction, [], {#psbt: psbt}),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<String> broadcastTransaction({String? psbt}) => (super
      .noSuchMethod(Invocation.method(#broadcastTransaction, [], {#psbt: psbt}),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> quickSend(
          {String? recipient, int? amount, double? feeRate}) =>
      (super.noSuchMethod(
          Invocation.method(#quickSend, [],
              {#recipient: recipient, #amount: amount, #feeRate: feeRate}),
          returnValue: _i3.Future<String>.value('')) as _i3.Future<String>);
}
